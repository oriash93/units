
def generationGroup = "Generation"

task copyGeneratedCpp(type: Copy) {
	doLast {
		println "Copied c++ files"
	}
	
    from 'units_generator/generated/cpp/'
    into 'units_cpp/src/'
    include '**/*.h'
    include '**/*.cc'
    exclude { details -> details.file.name.endsWith('.swp')}
    group generationGroup
    description = "Copy c++ generated files into units_cpp project"
}

task copyGeneratedJava(type: Copy) {
	doLast {
		println "Copied java files"
	}
	
    from 'units_generator/generated/java/'
    into 'units_java/src/'
    include '**/*.java'
    exclude { details -> details.file.name.endsWith('.swp')}
    group generationGroup
    description = "Copy java generated files into units_java project"
}

task copyGeneratedSupportedUnits(type: Copy) {
	doLast {
		println "Copied general files"
	}
	
    from 'units_generator/generated/docs/'
    into 'docs/'
    group generationGroup
    description = "Copy general generated files into units project"
}

task generate {
	doFirst {
		rootProject.project('units_generator').run.execute()
		copyGeneratedCpp.execute()
		copyGeneratedJava.execute()
		copyGeneratedSupportedUnits.execute()
	}
	
	doLast {
		println "Finished generating!"
	}
	
	group generationGroup
	description = "Generate units files"
}